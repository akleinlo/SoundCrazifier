name: SonarQube-Backend

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Code auschecken
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # wichtig f√ºr SonarQube

      # 2Ô∏è‚É£ Java einrichten
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      # 3Ô∏è‚É£ SonarQube Cache
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      # 4Ô∏è‚É£ Maven Cache
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 5Ô∏è‚É£ Lokale Csound-JAR installieren üí°
      - name: Install local Csound JAR
        run: |
          mvn install:install-file \
            -Dfile=backend/lib/csound-6.18.1.jar \
            -DgroupId=org.csound \
            -DartifactId=csound \
            -Dversion=6.18.1 \
            -Dpackaging=jar

      # 6Ô∏è‚É£ Backend bauen + Sonar-Analyse
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        working-directory: backend
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=akleinlo_SoundCrazifier_backend
